# name: CI          # name of the workflow

# on:       # Controls when the workflow will run

#   # Triggers the workflow on push or pull request events but only for the "master" branch
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]
#   workflow_dispatch:         # Allows you to run this workflow manually from the Actions tab

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
    
#     runs-on: ubuntu-latest          # The type of runner that the job will run on

    
#     steps:                   # These are the Steps what we are going to run and execute
      
#       - name: Checkout repo
#         uses: actions/checkout@v3         #  fisrt I am going to check out the repo, it will clone the repo
#                                           # it is mandatory 

      
#       - name: SonarCloud Scan              #(it will scan the static code from developers)
#         uses: sonarsource/sonarcloud-github-action@master
#         env: 
#           GITHUB_TOKEN: ${{ secrets.HUB_TOKEN }}         # get the token from Github developer settings and paste it to github secrets
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}        # get the token from Sonarcloud account and paste it in secrets on Github actions

      
#       - name: Build image                # build image in Dockerhub/Google Artifactory/ AWS
#         run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/flaskex:${{ github.sha }}  .
          
#       - name: List image                 # check the image lists
#         run: docker images
        

#       - name: Run Trivy vulnerability scanner      # Scan the Image(it will scan the base image for any vulnerabilities of OS + code) with Trivy (open spurce)
#         uses: aquasecurity/trivy-action@master
#         with: 
#           image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/flaskex:${{ github.sha }}'
#           format: 'table'
#           exit-code: '0'
#           ignore-unfixed: true
#           vuln-type: 'os, library'
#           severity: 'CRITICAL,HIGH'          # it will scan critical, high vulnerabilites

#       - name: Push Image to Registry               # push the image after scanning to registry: Google Artifactory/ AWS
#         run: |
#           docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/flaskex:${{ github.sha }}  
#     # sha command is creates a rundom nubmer of tags
#   # so this process is all about building an image, getting an image, scanning the code, scanning the image, and push it to registry 
  
#   # now deploy the app
#   deploy:   
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Setup KUBECONFIG 
#         uses: fhm